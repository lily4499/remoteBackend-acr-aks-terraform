pipeline {
    agent any
    
    environment {
        location="eastus"
        RESOURCE_GROUP_NAME = 'tfstaterg'
        STORAGE_ACCOUNT_NAME = 'lilibackendsa'
        CONTAINER_NAME = 'tfstatect'
        AZURE_CREDENTIALS_ID = 'lili-acr-credentials-id' // ID of the Azure credentials configured in Jenkins
    }

    stages {
        stage('Create Resource Group and Storage Account') {
            steps {
                script {
                    // Check if the resource group exists
                    def resourceGroupExists = sh(script: "az group show --name ${RESOURCE_GROUP_NAME} --output json", returnStatus: true)
                    
                    if (resourceGroupExists == 0) {
                        echo "Resource group '${RESOURCE_GROUP_NAME}' already exists."
                    } else {
                        echo "Resource group '${RESOURCE_GROUP_NAME}' does not exist. Creating..."
                        sh "az group create --name ${RESOURCE_GROUP_NAME} --location $location"
                    }
                    
                    // Check if the storage account already exists
                    def storageAccountExists = sh(script: "az storage account check-name --name ${STORAGE_ACCOUNT_NAME} --output json", returnStatus: true)
                    
                    if (storageAccountExists == 0) {
                        echo "Storage account ${STORAGE_ACCOUNT_NAME} already exists."
                    } else {
                        echo "Storage account ${STORAGE_ACCOUNT_NAME} does not exist. Creating..."
                        sh "az storage account create --resource-group ${RESOURCE_GROUP_NAME} --name ${STORAGE_ACCOUNT_NAME} --sku Standard_LRS --encryption-services blob"
                    }
                }
            }
        }
        
        
        stage('Create Blob Container') {
            steps {
                script {
                    // Create blob container
                    sh "az storage container create --name ${CONTAINER_NAME} --account-name ${STORAGE_ACCOUNT_NAME} "
                }
            }
        }
        
        stage('Trigger Jenkins Job to Create ACR and AKS') {
            when {
                expression {
                    // Run this stage if the previous stage (or any previous stage) has succeeded
                    currentBuild.previousBuild?.result == 'SUCCESS'     
                }
            }
            steps {
                script {
                    // Trigger another Jenkins job to create ACR and AKS
                    build job: 'Create-ACR-and-AKS-Resource-terraform', wait: false
                }
            }
        }
    }
}
